version: 2
jobs:
  create_cluster:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Create cluster (if needed)
          command: |
            echo ${GCLOUD_SERVICE_KEY} > gcloud-key.json
            gcloud auth activate-service-account --key-file=gcloud-key.json

            #Check if cluster exists
            CLUSTER_EXISTS=$(gcloud container clusters list --project "g-gke-clusters" --filter "name=dev-playground" --format "value(name)")
            if [[ $CLUSTER_EXISTS == "" ]]; then
              NETWORK_EXISTS=$(gcloud compute networks list --project "g-gke-clusters" --filter "name=dev-playground-network" --format "value(name)")
              if [[ $NETWORK_EXISTS == "" ]]; then
                gcloud compute networks create "dev-playground-network" --project "g-gke-clusters"
              else
                echo "Network already exists"
              fi
              gcloud container clusters create "dev-playground" \
                --enable-autorepair \
                --machine-type=n1-standard-1 \
                --num-nodes=4 \
                --network="dev-playground-network" \
                --project "g-gke-clusters" \
                --zone "us-central1-a"
            else
              echo "Cluster already exists"
            fi
  install_istio:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Setup access
          command: |
            echo ${GCLOUD_SERVICE_KEY} > gcloud-key.json
            gcloud auth activate-service-account --key-file=gcloud-key.json
            gcloud container clusters get-credentials "dev-playground" --project "g-gke-clusters" --zone "us-central1-a"
            # Ignore error if role binding already exists with || true
            kubectl create clusterrolebinding cluster-admin-binding --clusterrole=cluster-admin \
                --user="$(gcloud config get-value core/account)" || true
      - run:
          name: Install Istio
          command: |
            kubectl config set-context "$(kubectl config current-context)" --namespace=default
            kubectl apply -f istio-1.0.3/istio-demo-auth.yaml
workflows:
  version: 2
  install_istio:
    jobs:
      - create_cluster
      - install_istio:
          requires:
            - create_cluster
